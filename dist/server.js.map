{"version":3,"sources":["../backend/server.js"],"names":["app","use","json","urlencoded","extended","join","__dirname","port","isProduction","process","env","PORT","NODE_ENV","compiler","webpackMiddleware","publicPath","output","quite","contentBase","stats","colors","hash","timings","chunks","chunkModules","modules","get","response","req","res","write","fileSystem","readFileSync","end","static","sendFile","server","listen","host","address","envString","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AANA;AAQA,IAAMA,MAAM,wBAAZ;;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIA;;AAEA;;AAGA;;;;AAIA;;AAEA;;AAEAA,IAAIC,GAAJ,CAAQ,sBAAO,MAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQ,4BAAQ,eAAKI,IAAL,CAAUC,SAAV,EAAqB,gBAArB,CAAR,CAAR;AACA;;AAEA,IAAMC,OAAOC,eAAeC,QAAQC,GAAR,CAAYC,IAA3B,GAAkC,IAA/C;AACA,IAAMH,eAAeC,QAAQC,GAAR,CAAYE,QAAZ,KAAyB,YAA9C;;AAEA,IAAI,CAACJ,YAAL,EAAmB;AAAA;AAClB,MAAIK,WAAW,yCAAf;AACA,MAAIC,oBAAoB,oCAAqBD,QAArB,EAA+B;AACtDE,eAAY,kBAAOC,MAAP,CAAcD,UAD4B;AAEtDE,UAAO,IAF+C;AAGtDC,gBAAa,KAHyC;AAItDC,UAAO;AACNC,YAAQ,IADF;AAENC,UAAM,KAFA;AAGNC,aAAS,IAHH;AAINC,YAAQ,KAJF;AAKNC,kBAAc,KALR;AAMNC,aAAS;AANH;AAJ+C,GAA/B,CAAxB;;AAcAzB,MAAIC,GAAJ,CAAQa,iBAAR;AACAd,MAAIC,GAAJ,CAAQ,oCAAqBY,QAArB,CAAR;AACAb,MAAI0B,GAAJ,CAAQ,GAAR,EAAa,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AACxCA,OAAIC,KAAJ,CAAUhB,kBAAkBiB,UAAlB,CAA6BC,YAA7B,CAA0C,eAAK3B,IAAL,CAAUC,SAAV,EAAqB,6BAArB,CAA1C,CAAV;AACAuB,OAAII,GAAJ;AACA,GAHD;AAlBkB;AAsBlB,CAtBD,MAsBO;AACNjC,KAAIC,GAAJ,CAAQ,kBAAQiC,MAAR,CAAe,eAAK7B,IAAL,CAAUC,SAAV,EAAqB,mBAArB,CAAf,CAAR;AACAN,KAAI0B,GAAJ,CAAQ,GAAR,EAAa,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4B;AACxCA,MAAIM,QAAJ,CAAa,eAAK9B,IAAL,CAAUC,SAAV,EAAqB,8BAArB,CAAb;AACA,EAFD;AAGA;;AAGD,IAAM8B,SAASpC,IAAIqC,MAAJ,CAAW9B,IAAX,EAAiB,YAAW;;AAE1C,KAAI+B,OAAOF,OAAOG,OAAP,GAAiBA,OAA5B;AACA,KAAIhC,OAAO6B,OAAOG,OAAP,GAAiBhC,IAA5B;;AAEA,KAAIiC,YAAYhC,eAAe,YAAf,GAA8B,aAA9C;;AAEAiC,SAAQC,GAAR,CAAYF,YAAY,mCAAxB,EAA6DF,IAA7D,EAAmE/B,IAAnE;AAEA,CATc,CAAf;;AAWA;AACAP,IAAIC,GAAJ,CAAQ,GAAR","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport morgan from 'morgan';\nimport favicon from 'serve-favicon';\n// webpack\nimport path from 'path';\nimport webpack from 'webpack';\nimport webpackDevMiddleware from 'webpack-dev-middleware';\nimport webpackHotMiddleware from 'webpack-hot-middleware';\nimport routes from './routes';\nimport config from '../webpack.config';\n\nconst app = express();\n\n// const router = express.Router({\n// \tcaseSensitive: app.get('case sensitive routing'),\n// \tstrict: app.get('strict routing')\n// });\n\n/*===========================================\n=            Baic Authentication            =\n===========================================*/\n\n// app.use(require('node-basicauth')({'haochuan': 'password'}));\n\n/*=====  End of Baic Authentication  ======*/\n\n\n/*===========================\n=            COR            =\n===========================*/\n\n// app.use(require('cors')());\n\n/*=====  End of COR  ======*/\n\napp.use(morgan('tiny'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(favicon(path.join(__dirname, \"../favicon.ico\")));\n// app.use(router);\n\nconst port = isProduction ? process.env.PORT : 3000;\nconst isProduction = process.env.NODE_ENV === 'production';\n\nif (!isProduction) {\n\tlet compiler = webpack(config);\n\tlet webpackMiddleware = webpackDevMiddleware(compiler, {\n\t\tpublicPath: config.output.publicPath,\n\t\tquite: true,\n\t\tcontentBase: 'src',\n\t\tstats: {\n\t\t\tcolors: true,\n\t\t\thash: false,\n\t\t\ttimings: true,\n\t\t\tchunks: false,\n\t\t\tchunkModules: false,\n\t\t\tmodules: false\n\t\t}\n\t});\n\n\tapp.use(webpackMiddleware);\n\tapp.use(webpackHotMiddleware(compiler));\n\tapp.get('/', function response(req, res) {\n\t\tres.write(webpackMiddleware.fileSystem.readFileSync(path.join(__dirname, '../frontend/dist/index.html')));\n\t\tres.end();\n\t});\n} else {\n\tapp.use(express.static(path.join(__dirname, '../frontend/build')));\n\tapp.get('/', function response(req, res) {\n\t\tres.sendFile(path.join(__dirname, '../frontend/build/index.html'));\n\t});\n}\n\n\nconst server = app.listen(port, function() {\n\n\tlet host = server.address().address;\n\tlet port = server.address().port;\n\n\tvar envString = isProduction ? \"Production\" : \"Development\";\n\n\tconsole.log(envString + ' server listening at http://%s:%s', host, port);\n\n});\n\n// Routes\napp.use('/', routes);\n"]}